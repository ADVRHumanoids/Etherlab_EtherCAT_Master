From 235bc77711468b51c83a994195abc9f791e1f9d4 Mon Sep 17 00:00:00 2001
From: Ricardo Ribalda Delgado <ricardo@ribalda.com>
Date: Thu, 20 Jun 2019 09:52:09 +0200
Subject: [PATCH] cdev: Port to kernel 5.1

|   CC [M]  /workdir/build/tmp/work/qt5122-poky-linux/ethercat-modules/1.5.2-r0/git//master/fsm_pdo.o
| /workdir/build/tmp/work/qt5122-poky-linux/ethercat-modules/1.5.2-r0/git//master/cdev.c:91:14: error: initialization of 'vm_fault_t (*)(struct vm_fault *)' {aka 'unsigned int (*)(struct vm_fault *)'} from incompatible pointer type 'int (*)(struct vm_fault *)' [-Werror=incompatible-pointer-types]
|      .fault = eccdev_vma_fault
|               ^~~~~~~~~~~~~~~~
| /workdir/build/tmp/work/qt5122-poky-linux/ethercat-modules/1.5.2-r0/git//master/cdev.c:91:14: note: (near initialization for 'ec
```cdev_vm_ops.fault')

Signed-off-by: Ricardo Ribalda Delgado <ricardo@ribalda.com>
---
 master/cdev.c | 27 ++++++++++++++++++---------
 1 file changed, 18 insertions(+), 9 deletions(-)

diff --git a/master/cdev.c b/master/cdev.c
index 44cc5226..1d84af2d 100644
--- a/master/cdev.c
+++ b/master/cdev.c
@@ -62,18 +62,23 @@ static int eccdev_mmap(struct file *, struct vm_area_struct *);
 #define PAGE_FAULT_VERSION KERNEL_VERSION(2, 6, 23)
 
 #if LINUX_VERSION_CODE >= PAGE_FAULT_VERSION
+static
 #if LINUX_VERSION_CODE > KERNEL_VERSION(5, 0, 0)
-static vm_fault_t eccdev_vma_fault(struct vm_fault *);
-#elif LINUX_VERSION_CODE < KERNEL_VERSION(4, 11, 0)
-static int eccdev_vma_fault(struct vm_area_struct *, struct vm_fault *);
+vm_fault_t
 #else
-static int eccdev_vma_fault(struct vm_fault *);
+int
 #endif
+eccdev_vma_fault(
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 11, 0)
+        struct vm_area_struct *,
+#endif
+        struct vm_fault *);
 #else
 static struct page *eccdev_vma_nopage(
         struct vm_area_struct *, unsigned long, int *);
 #endif
 
+
 /*****************************************************************************/
 
 /** File operation callbacks for the EtherCAT character device.
@@ -258,14 +263,18 @@ int eccdev_mmap(
  *
  * \return Zero on success, otherwise a negative error code.
  */
+static
 #if LINUX_VERSION_CODE > KERNEL_VERSION(5, 0, 0)
-static vm_fault_t eccdev_vma_fault(struct vm_fault *vmf /**< Fault data. */)
-#elif LINUX_VERSION_CODE < KERNEL_VERSION(4, 11, 0)
-static int eccdev_vma_fault(struct vm_area_struct *vma, /**< Virtual memory area. */
-                            struct vm_fault *vmf /**< Fault data. */)
+vm_fault_t
 #else
-static int eccdev_vma_fault(struct vm_fault *vmf /**< Fault data. */)
+int
 #endif
+eccdev_vma_fault(
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 11, 0)
+        struct vm_area_struct *vma, /**< Virtual memory area. */
+#endif
+        struct vm_fault *vmf /**< Fault data. */
+        )
 {
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 11, 0)
     struct vm_area_struct *vma = vmf->vma;
-- 
2.25.1

